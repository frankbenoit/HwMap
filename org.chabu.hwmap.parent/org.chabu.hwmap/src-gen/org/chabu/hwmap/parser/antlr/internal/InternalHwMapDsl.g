/*
 * generated by Xtext 2.19.0
 */
grammar InternalHwMapDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.chabu.hwmap.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.chabu.hwmap.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.chabu.hwmap.services.HwMapDslGrammarAccess;

}

@parser::members {

 	private HwMapDslGrammarAccess grammarAccess;

    public InternalHwMapDslParser(TokenStream input, HwMapDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "MemoryMap";
   	}

   	@Override
   	protected HwMapDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleMemoryMap
entryRuleMemoryMap returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMemoryMapRule()); }
	iv_ruleMemoryMap=ruleMemoryMap
	{ $current=$iv_ruleMemoryMap.current; }
	EOF;

// Rule MemoryMap
ruleMemoryMap returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMemoryMapAccess().getMemoryMapAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMemoryMapAccess().getOutputsOutputParserRuleCall_1_0());
				}
				lv_outputs_1_0=ruleOutput
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMemoryMapRule());
					}
					add(
						$current,
						"outputs",
						lv_outputs_1_0,
						"org.chabu.hwmap.HwMapDsl.Output");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getMemoryMapAccess().getComponentsComponentParserRuleCall_2_0());
				}
				lv_components_2_0=ruleComponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMemoryMapRule());
					}
					add(
						$current,
						"components",
						lv_components_2_0,
						"org.chabu.hwmap.HwMapDsl.Component");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOutput
entryRuleOutput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutputRule()); }
	iv_ruleOutput=ruleOutput
	{ $current=$iv_ruleOutput.current; }
	EOF;

// Rule Output
ruleOutput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getOutputAccess().getOutputAction_0(),
					$current);
			}
		)
		otherlv_1='Output'
		{
			newLeafNode(otherlv_1, grammarAccess.getOutputAccess().getOutputKeyword_1());
		}
		(
			(
				(
					lv_mode_2_1='VHDL'
					{
						newLeafNode(lv_mode_2_1, grammarAccess.getOutputAccess().getModeVHDLKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOutputRule());
						}
						setWithLastConsumed($current, "mode", lv_mode_2_1, null);
					}
					    |
					lv_mode_2_2='C'
					{
						newLeafNode(lv_mode_2_2, grammarAccess.getOutputAccess().getModeCKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOutputRule());
						}
						setWithLastConsumed($current, "mode", lv_mode_2_2, null);
					}
				)
			)
		)
		(
			(
				lv_path_3_0=RULE_STRING
				{
					newLeafNode(lv_path_3_0, grammarAccess.getOutputAccess().getPathSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOutputRule());
					}
					setWithLastConsumed(
						$current,
						"path",
						lv_path_3_0,
						"org.chabu.hwmap.HwMapDsl.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleComponent
entryRuleComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentRule()); }
	iv_ruleComponent=ruleComponent
	{ $current=$iv_ruleComponent.current; }
	EOF;

// Rule Component
ruleComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getComponentAccess().getComponentAction_0(),
					$current);
			}
		)
		otherlv_1='Component'
		{
			newLeafNode(otherlv_1, grammarAccess.getComponentAccess().getComponentKeyword_1());
		}
		(
			(
				lv_compName_2_0=RULE_ID
				{
					newLeafNode(lv_compName_2_0, grammarAccess.getComponentAccess().getCompNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentRule());
					}
					setWithLastConsumed(
						$current,
						"compName",
						lv_compName_2_0,
						"org.chabu.hwmap.HwMapDsl.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentAccess().getBlocksBlockParserRuleCall_4_0_0());
					}
					lv_blocks_4_0=ruleBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentRule());
						}
						add(
							$current,
							"blocks",
							lv_blocks_4_0,
							"org.chabu.hwmap.HwMapDsl.Block");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentAccess().getInstsInstantiationParserRuleCall_4_1_0());
					}
					lv_insts_5_0=ruleInstantiation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentRule());
						}
						add(
							$current,
							"insts",
							lv_insts_5_0,
							"org.chabu.hwmap.HwMapDsl.Instantiation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleInstantiation
entryRuleInstantiation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstantiationRule()); }
	iv_ruleInstantiation=ruleInstantiation
	{ $current=$iv_ruleInstantiation.current; }
	EOF;

// Rule Instantiation
ruleInstantiation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInstantiationAccess().getInstantiationAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInstantiationAccess().getAddrIntegerLiteralParserRuleCall_1_0());
				}
				lv_addr_1_0=ruleIntegerLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInstantiationRule());
					}
					set(
						$current,
						"addr",
						lv_addr_1_0,
						"org.chabu.hwmap.HwMapDsl.IntegerLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_type_2_0=RULE_ID
				{
					newLeafNode(lv_type_2_0, grammarAccess.getInstantiationAccess().getTypeIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInstantiationRule());
					}
					setWithLastConsumed(
						$current,
						"type",
						lv_type_2_0,
						"org.chabu.hwmap.HwMapDsl.ID");
				}
			)
		)
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getInstantiationAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInstantiationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.chabu.hwmap.HwMapDsl.ID");
				}
			)
		)?
	)
;

// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	iv_ruleBlock=ruleBlock
	{ $current=$iv_ruleBlock.current; }
	EOF;

// Rule Block
ruleBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBlockAccess().getBlockAction_0(),
					$current);
			}
		)
		otherlv_1='Block'
		{
			newLeafNode(otherlv_1, grammarAccess.getBlockAccess().getBlockKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getBlockAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBlockRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.chabu.hwmap.HwMapDsl.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBlockAccess().getSizeIntegerLiteralParserRuleCall_3_0());
				}
				lv_size_3_0=ruleIntegerLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBlockRule());
					}
					set(
						$current,
						"size",
						lv_size_3_0,
						"org.chabu.hwmap.HwMapDsl.IntegerLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBlockAccess().getRegsRegisterParserRuleCall_5_0());
				}
				lv_regs_5_0=ruleRegister
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBlockRule());
					}
					add(
						$current,
						"regs",
						lv_regs_5_0,
						"org.chabu.hwmap.HwMapDsl.Register");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleRegister
entryRuleRegister returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRegisterRule()); }
	iv_ruleRegister=ruleRegister
	{ $current=$iv_ruleRegister.current; }
	EOF;

// Rule Register
ruleRegister returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRegisterAccess().getAddrIntegerLiteralParserRuleCall_0_0());
				}
				lv_addr_0_0=ruleIntegerLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRegisterRule());
					}
					set(
						$current,
						"addr",
						lv_addr_0_0,
						"org.chabu.hwmap.HwMapDsl.IntegerLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRegisterAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegisterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.chabu.hwmap.HwMapDsl.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRegisterAccess().getConstsConstantParserRuleCall_2_0());
				}
				lv_consts_2_0=ruleConstant
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRegisterRule());
					}
					add(
						$current,
						"consts",
						lv_consts_2_0,
						"org.chabu.hwmap.HwMapDsl.Constant");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getRegisterAccess().getBitsRegisterBitsParserRuleCall_3_0());
				}
				lv_bits_3_0=ruleRegisterBits
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRegisterRule());
					}
					add(
						$current,
						"bits",
						lv_bits_3_0,
						"org.chabu.hwmap.HwMapDsl.RegisterBits");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleRegisterBits
entryRuleRegisterBits returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRegisterBitsRule()); }
	iv_ruleRegisterBits=ruleRegisterBits
	{ $current=$iv_ruleRegisterBits.current; }
	EOF;

// Rule RegisterBits
ruleRegisterBits returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRegisterBitsAccess().getRangeRangeParserRuleCall_0_0());
				}
				lv_range_0_0=ruleRange
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRegisterBitsRule());
					}
					set(
						$current,
						"range",
						lv_range_0_0,
						"org.chabu.hwmap.HwMapDsl.Range");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRegisterBitsAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegisterBitsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.chabu.hwmap.HwMapDsl.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRegisterBitsAccess().getConstsConstantParserRuleCall_2_0());
				}
				lv_consts_2_0=ruleConstant
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRegisterBitsRule());
					}
					add(
						$current,
						"consts",
						lv_consts_2_0,
						"org.chabu.hwmap.HwMapDsl.Constant");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleRange
entryRuleRange returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRangeRule()); }
	iv_ruleRange=ruleRange
	{ $current=$iv_ruleRange.current; }
	EOF;

// Rule Range
ruleRange returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getRangeAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRangeAccess().getLeftIntegerLiteralParserRuleCall_1_0());
				}
				lv_left_1_0=ruleIntegerLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRangeRule());
					}
					set(
						$current,
						"left",
						lv_left_1_0,
						"org.chabu.hwmap.HwMapDsl.IntegerLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_OP_2DOT_2=RULE_OP_2DOT
			{
				newLeafNode(this_OP_2DOT_2, grammarAccess.getRangeAccess().getOP_2DOTTerminalRuleCall_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRangeAccess().getRightIntegerLiteralParserRuleCall_2_1_0());
					}
					lv_right_3_0=ruleIntegerLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRangeRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.chabu.hwmap.HwMapDsl.IntegerLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getRangeAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleConstant
entryRuleConstant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstantRule()); }
	iv_ruleConstant=ruleConstant
	{ $current=$iv_ruleConstant.current; }
	EOF;

// Rule Constant
ruleConstant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Constant'
		{
			newLeafNode(otherlv_0, grammarAccess.getConstantAccess().getConstantKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstantAccess().getValueIntegerLiteralParserRuleCall_1_0());
				}
				lv_value_1_0=ruleIntegerLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstantRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"org.chabu.hwmap.HwMapDsl.IntegerLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getConstantAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConstantRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.chabu.hwmap.HwMapDsl.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleIntegerLiteral
entryRuleIntegerLiteral returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIntegerLiteralRule()); }
	iv_ruleIntegerLiteral=ruleIntegerLiteral
	{ $current=$iv_ruleIntegerLiteral.current.getText(); }
	EOF;

// Rule IntegerLiteral
ruleIntegerLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_DEC_0=RULE_INT_DEC
		{
			$current.merge(this_INT_DEC_0);
		}
		{
			newLeafNode(this_INT_DEC_0, grammarAccess.getIntegerLiteralAccess().getINT_DECTerminalRuleCall_0());
		}
		    |
		this_INT_HEX_1=RULE_INT_HEX
		{
			$current.merge(this_INT_HEX_1);
		}
		{
			newLeafNode(this_INT_HEX_1, grammarAccess.getIntegerLiteralAccess().getINT_HEXTerminalRuleCall_1());
		}
	)
;

RULE_INT_DEC : ('-'? '1'..'9' ('0'..'9')*|'0');

RULE_INT_HEX : '0x' ('a'..'f'|'A'..'F'|'0'..'9')+;

RULE_OP_2DOT : '..';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
